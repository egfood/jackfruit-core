# Generated by Django 3.0.3 on 2020-06-17 20:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('store', '0003_auto_20200604_2320'),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodHomeOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('state', models.CharField(choices=[('awaiting_processing', 'Ожидает обработки'), ('prepared', 'Заказ сформирован'), ('delivered', 'Заказ доставлен'), ('cancelled', 'Заказ отменен')], default='awaiting_processing', max_length=85, verbose_name='Статус заказа')),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foodhomeorder_order', to='store.FoodDelivery', verbose_name='Доставка')),
                ('home', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='office_order', to='store.HomeLocation', verbose_name='Домашний адрес')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_foodhomeorder_order', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoodHomeOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('value', models.PositiveIntegerField(blank=True, null=True, verbose_name='Масса продукта (от покупателя) (гр.)')),
                ('actual_value', models.PositiveIntegerField(blank=True, null=True, verbose_name='Фактическая масса продукта (гр.)')),
                ('home_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_order_item', to='store.FoodHomeOrder', verbose_name='Заказ домой')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foodhomeorderitem_order_item', to='store.FoodProduct', verbose_name='Продукт')),
            ],
        ),
        migrations.CreateModel(
            name='FoodOfficeOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('state', models.CharField(choices=[('awaiting_processing', 'Ожидает обработки'), ('prepared', 'Заказ сформирован'), ('delivered', 'Заказ доставлен'), ('cancelled', 'Заказ отменен')], default='awaiting_processing', max_length=85, verbose_name='Статус заказа')),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foodofficeorder_order', to='store.FoodDelivery', verbose_name='Доставка')),
                ('office', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='office_order', to='store.OfficeLocation', verbose_name='Офис')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_foodofficeorder_order', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoodOfficeOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('value', models.PositiveIntegerField(blank=True, null=True, verbose_name='Масса продукта (от покупателя) (гр.)')),
                ('actual_value', models.PositiveIntegerField(blank=True, null=True, verbose_name='Фактическая масса продукта (гр.)')),
                ('office_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='office_order_item', to='store.FoodOfficeOrder', verbose_name='Заказ в офис')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foodofficeorderitem_order_item', to='store.FoodProduct', verbose_name='Продукт')),
            ],
        ),
        migrations.RemoveField(
            model_name='foodorderitem',
            name='order',
        ),
        migrations.RemoveField(
            model_name='foodorderitem',
            name='product',
        ),
        migrations.DeleteModel(
            name='FoodOrder',
        ),
        migrations.DeleteModel(
            name='FoodOrderItem',
        ),
        migrations.AddConstraint(
            model_name='foodofficeorderitem',
            constraint=models.UniqueConstraint(fields=('office_order', 'product'), name='each_office_order_item'),
        ),
        migrations.AddIndex(
            model_name='foodofficeorder',
            index=models.Index(fields=['delivery', 'user'], name='store_foodo_deliver_7517a6_idx'),
        ),
        migrations.AddConstraint(
            model_name='foodhomeorderitem',
            constraint=models.UniqueConstraint(fields=('home_order', 'product'), name='each_home_order_item'),
        ),
        migrations.AddIndex(
            model_name='foodhomeorder',
            index=models.Index(fields=['delivery', 'user'], name='store_foodh_deliver_cfedb5_idx'),
        ),
    ]
