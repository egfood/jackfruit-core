# Generated by Django 3.2.6 on 2022-01-03 20:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('farmer', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('buyer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodDelivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('date', models.DateTimeField(verbose_name='Дата и время поставки')),
                ('is_urgently_deactivated', models.BooleanField(default=False, verbose_name='Срочно выключить')),
                ('state', models.CharField(choices=[('collecting', 'Сбор заявок'), ('processing', 'Обработка заявок'), ('processing', 'Обработка заявок'), ('finished', 'Заказы доставлены'), ('suspended', 'Сбор заявок приостановлен'), ('cancelled', 'Отменена')], default='collecting', max_length=80, verbose_name='Статус доставки')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoodOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('state', models.CharField(choices=[('created', 'Создан'), ('awaiting_processing', 'Ожидает обработки'), ('delivered', 'Доставлено')], default='created', max_length=85, verbose_name='Статус заказа')),
                ('payment_type', models.CharField(choices=[('cash', 'Наличными'), ('card', 'Картой')], default='cash', max_length=100, verbose_name='Способ оплаты')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order', to='buyer.buyerprofile', verbose_name='Пользователь')),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order', to='store.fooddelivery', verbose_name='Доставка')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('name', models.CharField(max_length=250, verbose_name='Название категории')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TradeMargin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('backoffice_margin', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Наценка бэкофиса, %')),
                ('dev_margin', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Наценка разработчиков, %')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RootProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('name', models.CharField(max_length=250, verbose_name='Название продукта')),
                ('image', models.ImageField(blank=True, max_length=255, upload_to='products', verbose_name='Изображение продукта')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Включен')),
                ('description', models.TextField(blank=True, verbose_name='Описание продукта')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='root_product', to='store.productcategory', verbose_name='Категория')),
                ('trade_margin', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='root_product', to='store.trademargin', verbose_name='Наценка')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('location_type', models.CharField(choices=[('private', 'частный'), ('office', 'офис')], default='private', max_length=10, verbose_name='Тип адреса')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Имя')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Телефон')),
                ('office_name', models.TextField(blank=True, default='', max_length=8, verbose_name='Короткое название офиса')),
                ('city_type', models.CharField(choices=[('city', 'город'), ('settlement', 'поселок'), ('village', 'деревня')], default='city', max_length=100, verbose_name='Тип населенного пункта')),
                ('city_value', models.CharField(default='Минск', max_length=200, verbose_name='Населенный пункт')),
                ('city_district', models.CharField(blank=True, choices=[('angarskaya', 'Ангарская'), ('zelonyy_lug', 'Зелёный Луг')], default='', max_length=200, verbose_name='Микрорайон')),
                ('street_type', models.CharField(choices=[('street', 'улица'), ('proezd', 'проезд'), ('avenue', 'проспект'), ('square', 'площадь'), ('side_street', 'переулок'), ('other', 'другое')], default='street', max_length=40, verbose_name='Тип участка города')),
                ('street_value', models.CharField(max_length=300, verbose_name='Название улицы/площади/проезда')),
                ('building', models.CharField(max_length=15, verbose_name='Дом/Строение (с корпусом)')),
                ('porch', models.CharField(blank=True, default='', max_length=15, verbose_name='Подъезд')),
                ('floor', models.CharField(blank=True, default='', max_length=5, verbose_name='Этаж')),
                ('room', models.CharField(blank=True, default='', max_length=10, verbose_name='Помещение/квартира')),
                ('sort_key', models.PositiveIntegerField(default=0, verbose_name='Сортировка')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalTradeMargin',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date_creation', models.DateTimeField(blank=True, editable=False, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(blank=True, editable=False, verbose_name='Изменен')),
                ('backoffice_margin', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Наценка бэкофиса, %')),
                ('dev_margin', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Наценка разработчиков, %')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical trade margin',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRootProduct',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date_creation', models.DateTimeField(blank=True, editable=False, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(blank=True, editable=False, verbose_name='Изменен')),
                ('name', models.CharField(max_length=250, verbose_name='Название продукта')),
                ('image', models.TextField(blank=True, max_length=255, verbose_name='Изображение продукта')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Включен')),
                ('description', models.TextField(blank=True, verbose_name='Описание продукта')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='store.productcategory', verbose_name='Категория')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('trade_margin', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='store.trademargin', verbose_name='Наценка')),
            ],
            options={
                'verbose_name': 'historical root product',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFoodOrderItem',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date_creation', models.DateTimeField(blank=True, editable=False, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(blank=True, editable=False, verbose_name='Изменен')),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Объем/Кол./Вес (от покупателя)')),
                ('actual_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Фактический Объем/Кол./Вес')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=None, verbose_name='Цена (заполняется автоматически)')),
                ('value_per_price', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Объем/Кол./Вес за цену (заполняется автоматически)')),
                ('trade_margin', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Общая наценка (заполняется автоматически), %')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='store.foodorder', verbose_name='Заказ')),
                ('product', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farmer.farmerproduct', verbose_name='Фермерский продукт')),
            ],
            options={
                'verbose_name': 'historical food order item',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='FoodOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Объем/Кол./Вес (от покупателя)')),
                ('actual_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Фактический Объем/Кол./Вес')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=None, verbose_name='Цена (заполняется автоматически)')),
                ('value_per_price', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Объем/Кол./Вес за цену (заполняется автоматически)')),
                ('trade_margin', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Общая наценка (заполняется автоматически), %')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_item', to='store.foodorder', verbose_name='Заказ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_item', to='farmer.farmerproduct', verbose_name='Фермерский продукт')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='foodorder',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order', to='store.location', verbose_name='Адрес'),
        ),
        migrations.AddIndex(
            model_name='foodorder',
            index=models.Index(fields=['delivery', 'buyer', 'location'], name='store_foodo_deliver_7e0ebf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='foodorder',
            unique_together={('delivery', 'buyer', 'location')},
        ),
    ]
