
# This workflow will build and push a new container image to Amazon ECR,

name: Build and push release to ECR

on:
  push:
    tags:
    - '*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    env:
      REGISTRY: "692500277073.dkr.ecr.eu-north-1.amazonaws.com"
      IMAGE: "jackfruit-core"

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get the version
      id: get-version
      run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}

    - name: Build, tag, and push image to Amazon ECR
      uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{ secrets.AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        registry: ${{ env.REGISTRY }}
        image_name: ${{ env.IMAGE }}
        push_git_tag: true

    - name: Collect static
      env:
        TAG: ${{ steps.get-version.outputs.tag }}
      run: |
        docker run --rm \
        -e "SECRET_KEY=key" \
        -e "DATABASE_URL=postgres://root:root@postgres:5432/egreen" \
        -e STATIC_DOMAIN_NAME=static \
        -e MAILGUN_API_KEY=key \
        -v $(pwd):/code \
        "$REGISTRY/$IMAGE:$TAG" python manage.py collectstatic --no-input -v 3

    - name: Upload static to S3
      uses: jakejarvis/s3-sync-action@master
      env:
        AWS_S3_BUCKET: "dev-egreen"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: "eu-north-1"
        SOURCE_DIR: "static"
        DEST_DIR: ${{ steps.get-version.outputs.tag }}

    - name: Update application Docker image tag in Infra repo
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.PAT_TOKEN }}
        repository: egfood/egreen_infra
        event-type: update_stage_tag
        client-payload: '{"tag": "${{ steps.get-version.outputs.tag }}"}'